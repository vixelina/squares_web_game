import { mouse } from './data.js';

const CURSOR_SIZE = 50;

class Cursor {
    constructor(ctx) {
      this.x = 0;
      this.y = 0;
      this.width = CURSOR_SIZE;
      this.height = CURSOR_SIZE;
      this.ctx = ctx;
    }
  
    update() {
      this.x = mouse.x - this.width / 2;
      this.y = mouse.y - this.height / 2;
    }
  
    draw() {
      const borderThickness = 2;
    
      const imageData = this.ctx.getImageData(
        this.x - borderThickness,
        this.y - borderThickness,
        this.width + borderThickness * 2,
        this.height + borderThickness * 2
      );
      const data = imageData.data;
    
      for (let y = 0; y < imageData.height; y++) {
        for (let x = 0; x < imageData.width; x++) {
          const isTopBorder = y < borderThickness;
          const isBottomBorder = y >= imageData.height - borderThickness;
          const isLeftBorder = x < borderThickness;
          const isRightBorder = x >= imageData.width - borderThickness;
    
          if (isTopBorder || isBottomBorder || isLeftBorder || isRightBorder) {
            const index = (y * imageData.width + x) * 4;
            const r = data[index];
            const g = data[index + 1];
            const b = data[index + 2];
            const a = data[index + 3];
    
            if ((r == 0 && g == 0 && b == 0) || a == 0) {
              data[index    ] = 255; // r
              data[index + 1] = 255; // g
              data[index + 2] = 255; // b
              data[index + 3] = 255; // a
            } else {
              data[index    ] = 255 - r;
              data[index + 1] = 255 - g;
              data[index + 2] = 255 - b;
            }
          }
        }
      }
  
      this.ctx.putImageData(imageData, this.x - borderThickness, this.y - borderThickness);
    }
}

export default Cursor;